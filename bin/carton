#!/usr/bin/env bash

if [ -z "$EMACS" ] || [ -z "$(which $EMACS)" ] ; then
  EMACS=emacs
fi

# Use an environment variable to pass the name to the Emacs process.  We cannot
# give it as command line argument because that would cause Emacs to visit the
# file, printing a lot of superfluous messages.
export CARTON_STARTUP_SCRIPT="$0"
CARTON_PATH=$("$EMACS" -Q --batch --eval '(princ (file-truename (getenv "CARTON_STARTUP_SCRIPT")))')

if [ -z "$CARTON_DIR" -o ! -d "$CARTON_DIR" ] ; then
  CARTON_DIR="$(dirname $(dirname $CARTON_PATH))"
fi
TEMPLATE_DIR="$CARTON_DIR/templates"

CARTON_EL="$CARTON_DIR/carton.el"

if [[ -z "$1" ]]; then
  ${EMACS:-emacs} --script $(dirname $(dirname $0))/carton-cli.el -- "$@"
else
  case "$1" in
  version|info|list|package|install|update)
      ${EMACS:-emacs} --script $(dirname $(dirname $0))/carton-cli.el -- "$@"
      ;;
  init)
      ${EMACS:-emacs} --script $(dirname $(dirname $0))/carton-cli.el -- "$@"
      ;;
  exec)
    EMACSLOADPATH=$("$EMACS" -Q --batch --eval '(princ (mapconcat (quote identity) (append (file-expand-wildcards (format ".carton/%s/elpa/*" emacs-version) t) load-path) ":"))' 2>&1) exec "${@:2}"
    ;;
  -h|--help|help)
    ${EMACS:-emacs} --script $(dirname $(dirname $0))/carton-cli.el -- "$@"
    ;;
  esac
fi
